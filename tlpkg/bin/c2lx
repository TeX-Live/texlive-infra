#!/bin/sh 
# $Id$
# Originally written by Karl Berry. Public domain.
# 
# Front-front-end script for c2l to update
# (with first arg "e") LaTeX2e,
# or (with first arg "dev") LaTeX-dev,
# etc.,
# each of which is comprised of several packages to be updated together.
# 
# Look at the end of the output for the summarized results for each
# package, e.g., to see if any files ended up getting misplaced.
# 
# Final argument "p" runs place also (same as c2l --place).

placebase=${TMPDIR-/tmp}/`id -u`.tlplace
dirsfile=$placebase.dirs
firstfile=$placebase.first
tmpfile=$placebase.tmp
c2loutfile=$placebase.c2lout

if test "x$1" = xe || test "x$1" = x2e; then
  shift; label=l2e
  pkgs="amsmath cyrillic graphics tools latex firstaid latex-lab l3build"
elif test "x$1" = xdev; then
  shift; label=ldev
  pkgs="latex-amsmath-dev latex-firstaid-dev latex-graphics-dev latex-lab-dev"
  pkgs="$pkgs latex-tools-dev latex-base-dev l3build"
elif test "x$1" = x3; then
  shift; label=l3
  pkgs="l3experimental l3backend l3kernel"
elif test "x$1" = xhep; then
  shift; label=hep
  pkgs="hep-font hep-math-font hep-acronym hep-bibliography hep-float"
  pkgs="$pkgs hep-graphic hep-math hep-paper hep-reference hep-text hep-title"
elif test "x$1" = xjxu; then
  shift; label=jxu
  pkgs="colorist crefthe einfart minimalist simplivre"
  #pkgs="$pkgs beaulivre  create-theorem mindflow projlib q-and-a homework lebhart"
elif test "x$1" = xminim-all; then
  shift; label=minim
  pkgs="minim-hatching minim-math minim-mp minim-pdf minim-xmp minim"
else
  echo "$0: unknown latex or group type: $1" >&2
  echo "$0: must be one of: e dev 3 3dev ... minim-all (USTL)." >&2
  exit 1
fi

echo "`basename $0`: $label pkgs: $pkgs"

# 
>$firstfile
>$tmpfile
for p in $pkgs; do
  echo "${label} pkg $p" >&2 # progress report of a sort
  printf "\f ${label} pkg $p\n"
  # each c2l call creates various; combine the directory lists and output.
  c2l "$@" $p | tee $c2loutfile
  sed -n "1,/`printf '\f'`/p" $c2loutfile >>$firstfile # first part of output
  echo >>$firstfile
  cat $dirsfile >>$tmpfile
done

sort -u $tmpfile >$dirsfile
wc $dirsfile
echo
cat $firstfile
